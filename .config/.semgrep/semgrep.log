2025-05-15 22:28:36,629 - semgrep.notifications - WARNING - METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

2025-05-15 22:28:36,630 - semgrep.run_scan - DEBUG - semgrep version 1.2.0
2025-05-15 22:28:36,633 - semgrep.git - DEBUG - Failed to get project url from 'git ls-remote': Command failed with exit code: 128
-----
Command failed with output:
fatal: No remote configured to list refs from.


Failed to run 'git ls-remote --get-url'. Possible reasons:

- the git binary is not available
- the current working directory is not a git repository
- the baseline commit is not a parent of the current commit
    (if you are running through semgrep-app, check if you are setting `SEMGREP_BRANCH` or `SEMGREP_BASELINE_COMMIT` properly)
- the current working directory is not marked as safe
    (fix with `git config --global --add safe.directory $(pwd)`)

Try running the command yourself to debug the issue.
2025-05-15 22:28:36,634 - semgrep.config_resolver - DEBUG - Loading local config from /home/runner/workspace/.config/.semgrep/semgrep_rules.json
2025-05-15 22:28:36,635 - semgrep.config_resolver - DEBUG - Done loading local config from /home/runner/workspace/.config/.semgrep/semgrep_rules.json
2025-05-15 22:28:36,638 - semgrep.config_resolver - DEBUG - Saving rules to /tmp/semgrep-rpd0544i.rules
2025-05-15 22:28:36,814 - semgrep.semgrep_core - DEBUG - Failed to open resource semgrep-core-proprietary: [Errno 2] No such file or directory: '/tmp/_MEIvwzcRi/semgrep/bin/semgrep-core-proprietary'.
2025-05-15 22:28:37,306 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-05-15 22:28:37,307 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-05-15 22:28:37,307 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-05-15 22:28:37,308 - semgrep.config_resolver - DEBUG - loaded 1 configs in 0.6743712425231934
2025-05-15 22:28:37,393 - semgrep.run_scan - VERBOSE - running 711 rules from 1 config /home/runner/workspace/.config/.semgrep/semgrep_rules.json_0
2025-05-15 22:28:37,394 - semgrep.run_scan - VERBOSE - No .semgrepignore found. Using default .semgrepignore rules. See the docs for the list of default ignores: https://semgrep.dev/docs/cli-usage/#ignore-files
2025-05-15 22:28:37,395 - semgrep.run_scan - VERBOSE - Rules:
2025-05-15 22:28:37,395 - semgrep.run_scan - VERBOSE - <SKIPPED DATA (too many entries; use --max-log-list-entries)>
2025-05-15 22:28:37,876 - semgrep.core_runner - DEBUG - Passing whole rules directly to semgrep_core
2025-05-15 22:28:38,048 - semgrep.core_runner - DEBUG - Running Semgrep engine with command:
2025-05-15 22:28:38,048 - semgrep.core_runner - DEBUG - /tmp/_MEIvwzcRi/semgrep/bin/opengrep-core -json -rules /tmp/tmpaemstwfe.json -j 8 -targets /tmp/tmp_ggvbiyw -timeout 5 -timeout_threshold 3 -max_memory 0 -fast
2025-05-15 22:28:48,587 - semgrep.core_runner - DEBUG - --- semgrep-core stderr ---
[00.06][[34mINFO[0m]: Executed as: /tmp/_MEIvwzcRi/semgrep/bin/opengrep-core -json -rules /tmp/tmpaemstwfe.json -j 8 -targets /tmp/tmp_ggvbiyw -timeout 5 -timeout_threshold 3 -max_memory 0 -fast
[00.06][[34mINFO[0m]: Version: 1.2.0
[00.06][[34mINFO[0m]: Parsing rules in /tmp/tmpaemstwfe.json
[00.52][[34mINFO[0m]: scan: processing 315 files (skipping 0), with 454 rules (skipping 0 )
[06.27][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.injection.raw-html-format file: server/controllers/auth.ts func: registerAuthRoutes:16371]
[0m[07.03][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.express-wkhtmltoimage-injection file: server/controllers/auth.ts func: registerAuthRoutes:16371]
[0m[07.17][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.require-request file: server/controllers/projects.ts func: registerProjectRoutes:15418]
[0m[07.50][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.cors-misconfiguration file: server/controllers/projects.ts func: registerProjectRoutes:15418]
[0m[07.62][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.require-request file: server/controllers/auth.ts func: registerAuthRoutes:16371]
[0m[08.74][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-require file: client/src/context/auth-context.tsx func: ???]
[0m[08.85][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-require file: client/src/context/auth-context.tsx func: ???]
[0m[09.01][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-require file: client/src/context/auth-context.tsx func: ???]
[0m[09.39][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.lang.security.audit.unsafe-formatstring file: client/src/pages/project-detail.tsx func: ProjectDetail:29299]
[0m[10.49][[34mINFO[0m]: Custom ignore pattern: None
[10.49][[34mINFO[0m]: Custom ignore pattern: None
--- end semgrep-core stderr ---
2025-05-15 22:28:48,593 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('client/index.html'), 'config..semgrep.vendored-rules.html.security.audit.missing-integrity') match_id = 0ee74fd49637bebe183eca7188dbde26e386314e62cc2e7ba1ee60b377b638243fcd84e6c6fa04886198ccacfa6a711bfbcc61a28f9ddc913d5b3c53083cbc90_0
2025-05-15 22:28:48,594 - semgrep.rule_match - DEBUG - match_key = (' type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" (?is).*integrity= (google-analytics\\.com|fonts\\.googleapis\\.com|fonts\\.gstatic\\.com|googletagmanager\\.com) .*rel\\s*=\\s*[\'"]?preconnect.* href="... :// ..." href="//..." href=\'... :// ...\' href=\'//...\' src="... :// ..." src="//..." src=\'... :// ...\' src=\'//...\' <link  type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" > <script  type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" >...</script>', PosixPath('client/index.html'), 'config..semgrep.vendored-rules.html.security.audit.missing-integrity') match_id = 0728b64e224596592d04447ba8a642ff94e1fb9fcc07be26d49dc7e7f6898e638ad16ffcaca086932c58f4c6400fe32603323afef02cf9bfebcb0e4a53562a40_0
2025-05-15 22:28:48,595 - semgrep.rule_match - DEBUG - match_key = (' type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" (?is).*integrity= (google-analytics\\.com|fonts\\.googleapis\\.com|fonts\\.gstatic\\.com|googletagmanager\\.com) .*rel\\s*=\\s*[\'"]?preconnect.* href="... :// ..." href="//..." href=\'... :// ...\' href=\'//...\' src="... :// ..." src="//..." src=\'... :// ...\' src=\'//...\' <link  type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" > <script  type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" >...</script>', PosixPath('client/index.html'), 'config..semgrep.vendored-rules.html.security.audit.missing-integrity') match_id = 0728b64e224596592d04447ba8a642ff94e1fb9fcc07be26d49dc7e7f6898e638ad16ffcaca086932c58f4c6400fe32603323afef02cf9bfebcb0e4a53562a40_0
2025-05-15 22:28:48,596 - semgrep.rule_match - DEBUG - match_key = (' type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" (?is).*integrity= (google-analytics\\.com|fonts\\.googleapis\\.com|fonts\\.gstatic\\.com|googletagmanager\\.com) .*rel\\s*=\\s*[\'"]?preconnect.* href="... :// ..." href="//..." href=\'... :// ...\' href=\'//...\' src="... :// ..." src="//..." src=\'... :// ...\' src=\'//...\' <link  type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" > <script  type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" >...</script>', PosixPath('client/index.html'), 'config..semgrep.vendored-rules.html.security.audit.missing-integrity') match_id = 0728b64e224596592d04447ba8a642ff94e1fb9fcc07be26d49dc7e7f6898e638ad16ffcaca086932c58f4c6400fe32603323afef02cf9bfebcb0e4a53562a40_0
2025-05-15 22:28:48,597 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('scripts/create-tables.ts'), 'config..semgrep.replit-rules.javascript.drizzle-orm.security.audit.ban-drizzle-sql-raw') match_id = c5ac170354bbe7c4032471bcaa1027ec3291535e109077c952d0bf3b578dda6f62c2761395d816c5dfa7bce4e8138a091efd7260e368734f2347d38004be1cef_0
2025-05-15 22:28:48,597 - semgrep.rule_match - DEBUG - match_key = ("$ALIAS.raw(...) const { sql: $ALIAS } = require('drizzle-orm')\n...\n import { sql as $ALIAS } from 'drizzle-orm'\n...\n db.execute(`...`) db.query(`...`) ../server/db (\\./|\\.\\./|/).*db($|/.*) import { db } from ../server/db\n...\n db.sql.raw(...) const db = require('drizzle-orm')\n...\n import db from 'drizzle-orm'\n...\n const { sql } = require('drizzle-orm')\n...\n import { sql } from 'drizzle-orm'\n...\n sql.raw(...)", PosixPath('scripts/create-tables.ts'), 'config..semgrep.replit-rules.javascript.drizzle-orm.security.audit.ban-drizzle-sql-raw') match_id = 065051c3ebf142be09b99b3670ffbc01aed55b12aab571989d730cb353c908f324430a6b810aed98e61856de813e7faaef09f931cf3da630e887a5558ff44a6b_0
2025-05-15 22:28:48,598 - semgrep.rule_match - DEBUG - match_key = ("$ALIAS.raw(...) const { sql: $ALIAS } = require('drizzle-orm')\n...\n import { sql as $ALIAS } from 'drizzle-orm'\n...\n db.execute(`...`) db.query(`...`) ../server/db (\\./|\\.\\./|/).*db($|/.*) import { db } from ../server/db\n...\n db.sql.raw(...) const db = require('drizzle-orm')\n...\n import db from 'drizzle-orm'\n...\n const { sql } = require('drizzle-orm')\n...\n import { sql } from 'drizzle-orm'\n...\n sql.raw(...)", PosixPath('scripts/create-tables.ts'), 'config..semgrep.replit-rules.javascript.drizzle-orm.security.audit.ban-drizzle-sql-raw') match_id = 065051c3ebf142be09b99b3670ffbc01aed55b12aab571989d730cb353c908f324430a6b810aed98e61856de813e7faaef09f931cf3da630e887a5558ff44a6b_0
2025-05-15 22:28:48,598 - semgrep.rule_match - DEBUG - match_key = ("$ALIAS.raw(...) const { sql: $ALIAS } = require('drizzle-orm')\n...\n import { sql as $ALIAS } from 'drizzle-orm'\n...\n db.execute(`...`) db.query(`...`) ../server/db (\\./|\\.\\./|/).*db($|/.*) import { db } from ../server/db\n...\n db.sql.raw(...) const db = require('drizzle-orm')\n...\n import db from 'drizzle-orm'\n...\n const { sql } = require('drizzle-orm')\n...\n import { sql } from 'drizzle-orm'\n...\n sql.raw(...)", PosixPath('scripts/create-tables.ts'), 'config..semgrep.replit-rules.javascript.drizzle-orm.security.audit.ban-drizzle-sql-raw') match_id = 065051c3ebf142be09b99b3670ffbc01aed55b12aab571989d730cb353c908f324430a6b810aed98e61856de813e7faaef09f931cf3da630e887a5558ff44a6b_0
2025-05-15 22:28:48,599 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('scripts/create-tables.ts'), 'config..semgrep.replit-rules.javascript.drizzle-orm.security.audit.ban-drizzle-sql-raw') match_id = c5ac170354bbe7c4032471bcaa1027ec3291535e109077c952d0bf3b578dda6f62c2761395d816c5dfa7bce4e8138a091efd7260e368734f2347d38004be1cef_0
2025-05-15 22:28:48,600 - semgrep.rule_match - DEBUG - match_key = ("$ALIAS.raw(...) const { sql: $ALIAS } = require('drizzle-orm')\n...\n import { sql as $ALIAS } from 'drizzle-orm'\n...\n db.execute(`...`) db.query(`...`) ../server/db (\\./|\\.\\./|/).*db($|/.*) import { db } from ../server/db\n...\n db.sql.raw(...) const db = require('drizzle-orm')\n...\n import db from 'drizzle-orm'\n...\n const { sql } = require('drizzle-orm')\n...\n import { sql } from 'drizzle-orm'\n...\n sql.raw(...)", PosixPath('scripts/create-tables.ts'), 'config..semgrep.replit-rules.javascript.drizzle-orm.security.audit.ban-drizzle-sql-raw') match_id = 065051c3ebf142be09b99b3670ffbc01aed55b12aab571989d730cb353c908f324430a6b810aed98e61856de813e7faaef09f931cf3da630e887a5558ff44a6b_0
2025-05-15 22:28:48,600 - semgrep.rule_match - DEBUG - match_key = ("$ALIAS.raw(...) const { sql: $ALIAS } = require('drizzle-orm')\n...\n import { sql as $ALIAS } from 'drizzle-orm'\n...\n db.execute(`...`) db.query(`...`) ../server/db (\\./|\\.\\./|/).*db($|/.*) import { db } from ../server/db\n...\n db.sql.raw(...) const db = require('drizzle-orm')\n...\n import db from 'drizzle-orm'\n...\n const { sql } = require('drizzle-orm')\n...\n import { sql } from 'drizzle-orm'\n...\n sql.raw(...)", PosixPath('scripts/create-tables.ts'), 'config..semgrep.replit-rules.javascript.drizzle-orm.security.audit.ban-drizzle-sql-raw') match_id = 065051c3ebf142be09b99b3670ffbc01aed55b12aab571989d730cb353c908f324430a6b810aed98e61856de813e7faaef09f931cf3da630e887a5558ff44a6b_0
2025-05-15 22:28:48,601 - semgrep.rule_match - DEBUG - match_key = ("$ALIAS.raw(...) const { sql: $ALIAS } = require('drizzle-orm')\n...\n import { sql as $ALIAS } from 'drizzle-orm'\n...\n db.execute(`...`) db.query(`...`) ../server/db (\\./|\\.\\./|/).*db($|/.*) import { db } from ../server/db\n...\n db.sql.raw(...) const db = require('drizzle-orm')\n...\n import db from 'drizzle-orm'\n...\n const { sql } = require('drizzle-orm')\n...\n import { sql } from 'drizzle-orm'\n...\n sql.raw(...)", PosixPath('scripts/create-tables.ts'), 'config..semgrep.replit-rules.javascript.drizzle-orm.security.audit.ban-drizzle-sql-raw') match_id = 065051c3ebf142be09b99b3670ffbc01aed55b12aab571989d730cb353c908f324430a6b810aed98e61856de813e7faaef09f931cf3da630e887a5558ff44a6b_1
2025-05-15 22:28:48,601 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('scripts/create-tables.ts'), 'config..semgrep.replit-rules.javascript.drizzle-orm.security.audit.ban-drizzle-sql-raw') match_id = c5ac170354bbe7c4032471bcaa1027ec3291535e109077c952d0bf3b578dda6f62c2761395d816c5dfa7bce4e8138a091efd7260e368734f2347d38004be1cef_0
2025-05-15 22:28:48,602 - semgrep.rule_match - DEBUG - match_key = ("$ALIAS.raw(...) const { sql: $ALIAS } = require('drizzle-orm')\n...\n import { sql as $ALIAS } from 'drizzle-orm'\n...\n db.execute(`...`) db.query(`...`) ../server/db (\\./|\\.\\./|/).*db($|/.*) import { db } from ../server/db\n...\n db.sql.raw(...) const db = require('drizzle-orm')\n...\n import db from 'drizzle-orm'\n...\n const { sql } = require('drizzle-orm')\n...\n import { sql } from 'drizzle-orm'\n...\n sql.raw(...)", PosixPath('scripts/create-tables.ts'), 'config..semgrep.replit-rules.javascript.drizzle-orm.security.audit.ban-drizzle-sql-raw') match_id = 065051c3ebf142be09b99b3670ffbc01aed55b12aab571989d730cb353c908f324430a6b810aed98e61856de813e7faaef09f931cf3da630e887a5558ff44a6b_0
2025-05-15 22:28:48,603 - semgrep.rule_match - DEBUG - match_key = ("$ALIAS.raw(...) const { sql: $ALIAS } = require('drizzle-orm')\n...\n import { sql as $ALIAS } from 'drizzle-orm'\n...\n db.execute(`...`) db.query(`...`) ../server/db (\\./|\\.\\./|/).*db($|/.*) import { db } from ../server/db\n...\n db.sql.raw(...) const db = require('drizzle-orm')\n...\n import db from 'drizzle-orm'\n...\n const { sql } = require('drizzle-orm')\n...\n import { sql } from 'drizzle-orm'\n...\n sql.raw(...)", PosixPath('scripts/create-tables.ts'), 'config..semgrep.replit-rules.javascript.drizzle-orm.security.audit.ban-drizzle-sql-raw') match_id = 065051c3ebf142be09b99b3670ffbc01aed55b12aab571989d730cb353c908f324430a6b810aed98e61856de813e7faaef09f931cf3da630e887a5558ff44a6b_0
2025-05-15 22:28:48,603 - semgrep.rule_match - DEBUG - match_key = ("$ALIAS.raw(...) const { sql: $ALIAS } = require('drizzle-orm')\n...\n import { sql as $ALIAS } from 'drizzle-orm'\n...\n db.execute(`...`) db.query(`...`) ../server/db (\\./|\\.\\./|/).*db($|/.*) import { db } from ../server/db\n...\n db.sql.raw(...) const db = require('drizzle-orm')\n...\n import db from 'drizzle-orm'\n...\n const { sql } = require('drizzle-orm')\n...\n import { sql } from 'drizzle-orm'\n...\n sql.raw(...)", PosixPath('scripts/create-tables.ts'), 'config..semgrep.replit-rules.javascript.drizzle-orm.security.audit.ban-drizzle-sql-raw') match_id = 065051c3ebf142be09b99b3670ffbc01aed55b12aab571989d730cb353c908f324430a6b810aed98e61856de813e7faaef09f931cf3da630e887a5558ff44a6b_2
2025-05-15 22:28:48,604 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('scripts/create-tables.ts'), 'config..semgrep.replit-rules.javascript.drizzle-orm.security.audit.ban-drizzle-sql-raw') match_id = c5ac170354bbe7c4032471bcaa1027ec3291535e109077c952d0bf3b578dda6f62c2761395d816c5dfa7bce4e8138a091efd7260e368734f2347d38004be1cef_0
2025-05-15 22:28:48,604 - semgrep.rule_match - DEBUG - match_key = ("$ALIAS.raw(...) const { sql: $ALIAS } = require('drizzle-orm')\n...\n import { sql as $ALIAS } from 'drizzle-orm'\n...\n db.execute(`...`) db.query(`...`) ../server/db (\\./|\\.\\./|/).*db($|/.*) import { db } from ../server/db\n...\n db.sql.raw(...) const db = require('drizzle-orm')\n...\n import db from 'drizzle-orm'\n...\n const { sql } = require('drizzle-orm')\n...\n import { sql } from 'drizzle-orm'\n...\n sql.raw(...)", PosixPath('scripts/create-tables.ts'), 'config..semgrep.replit-rules.javascript.drizzle-orm.security.audit.ban-drizzle-sql-raw') match_id = 065051c3ebf142be09b99b3670ffbc01aed55b12aab571989d730cb353c908f324430a6b810aed98e61856de813e7faaef09f931cf3da630e887a5558ff44a6b_0
2025-05-15 22:28:48,605 - semgrep.rule_match - DEBUG - match_key = ("$ALIAS.raw(...) const { sql: $ALIAS } = require('drizzle-orm')\n...\n import { sql as $ALIAS } from 'drizzle-orm'\n...\n db.execute(`...`) db.query(`...`) ../server/db (\\./|\\.\\./|/).*db($|/.*) import { db } from ../server/db\n...\n db.sql.raw(...) const db = require('drizzle-orm')\n...\n import db from 'drizzle-orm'\n...\n const { sql } = require('drizzle-orm')\n...\n import { sql } from 'drizzle-orm'\n...\n sql.raw(...)", PosixPath('scripts/create-tables.ts'), 'config..semgrep.replit-rules.javascript.drizzle-orm.security.audit.ban-drizzle-sql-raw') match_id = 065051c3ebf142be09b99b3670ffbc01aed55b12aab571989d730cb353c908f324430a6b810aed98e61856de813e7faaef09f931cf3da630e887a5558ff44a6b_0
2025-05-15 22:28:48,605 - semgrep.rule_match - DEBUG - match_key = ("$ALIAS.raw(...) const { sql: $ALIAS } = require('drizzle-orm')\n...\n import { sql as $ALIAS } from 'drizzle-orm'\n...\n db.execute(`...`) db.query(`...`) ../server/db (\\./|\\.\\./|/).*db($|/.*) import { db } from ../server/db\n...\n db.sql.raw(...) const db = require('drizzle-orm')\n...\n import db from 'drizzle-orm'\n...\n const { sql } = require('drizzle-orm')\n...\n import { sql } from 'drizzle-orm'\n...\n sql.raw(...)", PosixPath('scripts/create-tables.ts'), 'config..semgrep.replit-rules.javascript.drizzle-orm.security.audit.ban-drizzle-sql-raw') match_id = 065051c3ebf142be09b99b3670ffbc01aed55b12aab571989d730cb353c908f324430a6b810aed98e61856de813e7faaef09f931cf3da630e887a5558ff44a6b_3
2025-05-15 22:28:48,606 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('scripts/create-tables.ts'), 'config..semgrep.replit-rules.javascript.drizzle-orm.security.audit.ban-drizzle-sql-raw') match_id = c5ac170354bbe7c4032471bcaa1027ec3291535e109077c952d0bf3b578dda6f62c2761395d816c5dfa7bce4e8138a091efd7260e368734f2347d38004be1cef_0
2025-05-15 22:28:48,606 - semgrep.rule_match - DEBUG - match_key = ("$ALIAS.raw(...) const { sql: $ALIAS } = require('drizzle-orm')\n...\n import { sql as $ALIAS } from 'drizzle-orm'\n...\n db.execute(`...`) db.query(`...`) ../server/db (\\./|\\.\\./|/).*db($|/.*) import { db } from ../server/db\n...\n db.sql.raw(...) const db = require('drizzle-orm')\n...\n import db from 'drizzle-orm'\n...\n const { sql } = require('drizzle-orm')\n...\n import { sql } from 'drizzle-orm'\n...\n sql.raw(...)", PosixPath('scripts/create-tables.ts'), 'config..semgrep.replit-rules.javascript.drizzle-orm.security.audit.ban-drizzle-sql-raw') match_id = 065051c3ebf142be09b99b3670ffbc01aed55b12aab571989d730cb353c908f324430a6b810aed98e61856de813e7faaef09f931cf3da630e887a5558ff44a6b_0
2025-05-15 22:28:48,607 - semgrep.rule_match - DEBUG - match_key = ("$ALIAS.raw(...) const { sql: $ALIAS } = require('drizzle-orm')\n...\n import { sql as $ALIAS } from 'drizzle-orm'\n...\n db.execute(`...`) db.query(`...`) ../server/db (\\./|\\.\\./|/).*db($|/.*) import { db } from ../server/db\n...\n db.sql.raw(...) const db = require('drizzle-orm')\n...\n import db from 'drizzle-orm'\n...\n const { sql } = require('drizzle-orm')\n...\n import { sql } from 'drizzle-orm'\n...\n sql.raw(...)", PosixPath('scripts/create-tables.ts'), 'config..semgrep.replit-rules.javascript.drizzle-orm.security.audit.ban-drizzle-sql-raw') match_id = 065051c3ebf142be09b99b3670ffbc01aed55b12aab571989d730cb353c908f324430a6b810aed98e61856de813e7faaef09f931cf3da630e887a5558ff44a6b_0
2025-05-15 22:28:48,607 - semgrep.rule_match - DEBUG - match_key = ("$ALIAS.raw(...) const { sql: $ALIAS } = require('drizzle-orm')\n...\n import { sql as $ALIAS } from 'drizzle-orm'\n...\n db.execute(`...`) db.query(`...`) ../server/db (\\./|\\.\\./|/).*db($|/.*) import { db } from ../server/db\n...\n db.sql.raw(...) const db = require('drizzle-orm')\n...\n import db from 'drizzle-orm'\n...\n const { sql } = require('drizzle-orm')\n...\n import { sql } from 'drizzle-orm'\n...\n sql.raw(...)", PosixPath('scripts/create-tables.ts'), 'config..semgrep.replit-rules.javascript.drizzle-orm.security.audit.ban-drizzle-sql-raw') match_id = 065051c3ebf142be09b99b3670ffbc01aed55b12aab571989d730cb353c908f324430a6b810aed98e61856de813e7faaef09f931cf3da630e887a5558ff44a6b_4
2025-05-15 22:28:48,608 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('scripts/create-test-user.ts'), 'config..semgrep.vendored-rules.generic.secrets.security.detected-bcrypt-hash') match_id = 0993f995b81c8dacd755de20f43615491aaf43d62bec3718ebc54be9302f6078dfc11f5a834c318cef0172f814da86a5bf8a00b315c84acd1e245dcf72989ecd_0
2025-05-15 22:28:48,608 - semgrep.rule_match - DEBUG - match_key = ('\\$2[aby]?\\$[\\d]+\\$[./A-Za-z0-9]{53}', PosixPath('scripts/create-test-user.ts'), 'config..semgrep.vendored-rules.generic.secrets.security.detected-bcrypt-hash') match_id = d4689546a35495e20c99cacfbbab7bb8778195177525bb8422a9d294cb3414e1d5e2ce2296f58be5b40b096302d58451e32deea9627fbe0a547377e3f6758210_0
2025-05-15 22:28:48,609 - semgrep.rule_match - DEBUG - match_key = ('\\$2[aby]?\\$[\\d]+\\$[./A-Za-z0-9]{53}', PosixPath('scripts/create-test-user.ts'), 'config..semgrep.vendored-rules.generic.secrets.security.detected-bcrypt-hash') match_id = d4689546a35495e20c99cacfbbab7bb8778195177525bb8422a9d294cb3414e1d5e2ce2296f58be5b40b096302d58451e32deea9627fbe0a547377e3f6758210_0
2025-05-15 22:28:48,609 - semgrep.rule_match - DEBUG - match_key = ('\\$2[aby]?\\$[\\d]+\\$[./A-Za-z0-9]{53}', PosixPath('scripts/create-test-user.ts'), 'config..semgrep.vendored-rules.generic.secrets.security.detected-bcrypt-hash') match_id = d4689546a35495e20c99cacfbbab7bb8778195177525bb8422a9d294cb3414e1d5e2ce2296f58be5b40b096302d58451e32deea9627fbe0a547377e3f6758210_0
2025-05-15 22:28:48,610 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/controllers/projects.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 76901ab152499c57f61da36736213eccd261e73c3e394232a58d7de630179dbd83d8b5c0c7e5bc14395e8b2def49f69f761c175c1cb44f893d4bd6f406a996e6_0
2025-05-15 22:28:48,611 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} file.path fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(file.path,...) fs. ... .accessSync(file.path, ...) fs. ... .appendFile(file.path,...) fs. ... .appendFileSync(file.path, ...) fs. ... .chmod(file.path,...) fs. ... .chmodSync(file.path, ...) fs. ... .chown(file.path,...) fs. ... .chownSync(file.path, ...) fs. ... .close(file.path,...) fs. ... .closeSync(file.path, ...) fs. ... .copyFile(file.path,...) fs. ... .copyFile($SMTH, file.path,...) fs. ... .copyFileSync(file.path, ...) fs. ... .copyFileSync($SMTH, file.path, ...) fs. ... .cp(file.path, ...) fs. ... .cp($SMTH, file.path, ...) fs. ... .cpSync(file.path, ...) fs. ... .cpSync($SMTH, file.path, ...) fs. ... .createReadStream(file.path,...) fs. ... .createWriteStream(file.path,...) fs. ... .exists(file.path, ...) fs. ... .existsSync(file.path, ...) fs. ... .fchmod(file.path, ...) fs. ... .fchmodSync(file.path, ...) fs. ... .fchown(file.path, ...) fs. ... .fchownSync(file.path, ...) fs. ... .fdatasync(file.path, ...) fs. ... .fdatasyncSync(file.path, ...) fs. ... .fstat(file.path, ...) fs. ... .fstatSync(file.path, ...) fs. ... .fsync(file.path, ...) fs. ... .fsyncSync(file.path, ...) fs. ... .ftruncate(file.path, ...) fs. ... .ftruncateSync(file.path, ...) fs. ... .futimes(file.path, ...) fs. ... .futimesSync(file.path, ...) fs. ... .lchmod(file.path, ...) fs. ... .lchmodSync(file.path, ...) fs. ... .lchown(file.path, ...) fs. ... .lchownSync(file.path, ...) fs. ... .link(file.path, ...) fs. ... .link($SMTH, file.path, ...) fs. ... .linkSync(file.path, ...) fs. ... .linkSync($SMTH, file.path, ...) fs. ... .lstat(file.path, ...) fs. ... .lstatSync(file.path, ...) fs. ... .lutimes(file.path, ...) fs. ... .lutimesSync(file.path, ...) fs. ... .mkdir(file.path, ...) fs. ... .mkdirSync(file.path, ...) fs. ... .mkdtemp(file.path, ...) fs. ... .mkdtempSync(file.path, ...) fs. ... .open(file.path, ...) fs. ... .openSync(file.path, ...) fs. ... .opendir(file.path, ...) fs. ... .opendirSync(file.path, ...) fs. ... .read(file.path, ...) fs. ... .read(file.path, ...) fs. ... .readFile(file.path, ...) fs. ... .readFileSync(file.path, ...) fs. ... .readSync(file.path, ...) fs. ... .readSync(file.path, ...) fs. ... .readdir(file.path, ...) fs. ... .readdirSync(file.path, ...) fs. ... .readlink(file.path, ...) fs. ... .readlinkSync(file.path, ...) fs. ... .readv(file.path, ...) fs. ... .readvSync(file.path, ...) fs. ... .realpath(file.path, ...) fs. ... .realpath.native(file.path, ...) fs. ... .realpathSync.native(file.path, ...) fs. ... .realpathync(file.path, ...) fs. ... .rename(file.path, ...) fs. ... .rename($SMTH, file.path, ...) fs. ... .renameSync(file.path, ...) fs. ... .renameSync($SMTH, file.path, ...) fs. ... .rm(file.path, ...) fs. ... .rmSync(file.path, ...) fs. ... .rmdir(file.path, ...) fs. ... .rmdirSync(file.path, ...) fs. ... .stat(file.path, ...) fs. ... .statSync(file.path, ...) fs. ... .symlink(file.path, ...) fs. ... .symlink($SMTH, file.path, ...) fs. ... .symlinkSync(file.path, ...) fs. ... .symlinkSync($SMTH, file.path, ...) fs. ... .truncate(file.path, ...) fs. ... .truncateSync(file.path, ...) fs. ... .unlink(file.path, ...) fs. ... .unlinkSync(file.path, ...) fs. ... .unwatchFile(file.path, ...) fs. ... .utimes(file.path, ...) fs. ... .utimesSync(file.path, ...) fs. ... .watch(file.path, ...) fs. ... .watchFile(file.path, ...) fs. ... .write(file.path, ...) fs. ... .writeFile(file.path, ...) fs. ... .writeFileSync(file.path, ...) fs. ... .writeSync(file.path, ...) fs. ... .writev(file.path, ...) fs. ... .writevSync(file.path, ...) file.path $METHOD("...", ...) access(file.path,...) accessSync(file.path, ...) appendFile(file.path,...) appendFileSync(file.path, ...) chmod(file.path,...) chmodSync(file.path, ...) chown(file.path,...) chownSync(file.path, ...) close(file.path,...) closeSync(file.path, ...) copyFile(file.path,...) copyFile($SMTH, file.path,...) copyFileSync(file.path, ...) copyFileSync($SMTH, file.path, ...) cp(file.path, ...) cp($SMTH, file.path, ...) cpSync(file.path, ...) cpSync($SMTH, file.path, ...) createReadStream(file.path,...) createWriteStream(file.path,...) exists(file.path, ...) existsSync(file.path, ...) fchmod(file.path, ...) fchmodSync(file.path, ...) fchown(file.path, ...) fchownSync(file.path, ...) fdatasync(file.path, ...) fdatasyncSync(file.path, ...) fstat(file.path, ...) fstatSync(file.path, ...) fsync(file.path, ...) fsyncSync(file.path, ...) ftruncate(file.path, ...) ftruncateSync(file.path, ...) futimes(file.path, ...) futimesSync(file.path, ...) lchmod(file.path, ...) lchmodSync(file.path, ...) lchown(file.path, ...) lchownSync(file.path, ...) link(file.path, ...) link($SMTH, file.path, ...) linkSync(file.path, ...) linkSync($SMTH, file.path, ...) lstat(file.path, ...) lstatSync(file.path, ...) lutimes(file.path, ...) lutimesSync(file.path, ...) mkdir(file.path, ...) mkdirSync(file.path, ...) mkdtemp(file.path, ...) mkdtempSync(file.path, ...) open(file.path, ...) openSync(file.path, ...) opendir(file.path, ...) opendirSync(file.path, ...) read(file.path, ...) read(file.path, ...) readFile(file.path, ...) readFileSync(file.path, ...) readSync(file.path, ...) readSync(file.path, ...) readdir(file.path, ...) readdirSync(file.path, ...) readlink(file.path, ...) readlinkSync(file.path, ...) readv(file.path, ...) readvSync(file.path, ...) realpath(file.path, ...) realpath.native(file.path, ...) realpathSync.native(file.path, ...) realpathync(file.path, ...) rename(file.path, ...) rename($SMTH, file.path, ...) renameSync(file.path, ...) renameSync($SMTH, file.path, ...) rm(file.path, ...) rmSync(file.path, ...) rmdir(file.path, ...) rmdirSync(file.path, ...) stat(file.path, ...) statSync(file.path, ...) symlink(file.path, ...) symlink($SMTH, file.path, ...) symlinkSync(file.path, ...) symlinkSync($SMTH, file.path, ...) truncate(file.path, ...) truncateSync(file.path, ...) unlink(file.path, ...) unlinkSync(file.path, ...) unwatchFile(file.path, ...) utimes(file.path, ...) utimesSync(file.path, ...) watch(file.path, ...) watchFile(file.path, ...) write(file.path, ...) writeFile(file.path, ...) writeFileSync(file.path, ...) writeSync(file.path, ...) writev(file.path, ...) writevSync(file.path, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/controllers/projects.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 8d8d488c53e2378c0c0129711518aade3ad895ff741d1118723632e7ea83e43c3d7121a6ce8aa426415b5cd5d71d5724bffce7a88732b355660e427da33072d4_0
2025-05-15 22:28:48,611 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} file.path fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(file.path,...) fs. ... .accessSync(file.path, ...) fs. ... .appendFile(file.path,...) fs. ... .appendFileSync(file.path, ...) fs. ... .chmod(file.path,...) fs. ... .chmodSync(file.path, ...) fs. ... .chown(file.path,...) fs. ... .chownSync(file.path, ...) fs. ... .close(file.path,...) fs. ... .closeSync(file.path, ...) fs. ... .copyFile(file.path,...) fs. ... .copyFile($SMTH, file.path,...) fs. ... .copyFileSync(file.path, ...) fs. ... .copyFileSync($SMTH, file.path, ...) fs. ... .cp(file.path, ...) fs. ... .cp($SMTH, file.path, ...) fs. ... .cpSync(file.path, ...) fs. ... .cpSync($SMTH, file.path, ...) fs. ... .createReadStream(file.path,...) fs. ... .createWriteStream(file.path,...) fs. ... .exists(file.path, ...) fs. ... .existsSync(file.path, ...) fs. ... .fchmod(file.path, ...) fs. ... .fchmodSync(file.path, ...) fs. ... .fchown(file.path, ...) fs. ... .fchownSync(file.path, ...) fs. ... .fdatasync(file.path, ...) fs. ... .fdatasyncSync(file.path, ...) fs. ... .fstat(file.path, ...) fs. ... .fstatSync(file.path, ...) fs. ... .fsync(file.path, ...) fs. ... .fsyncSync(file.path, ...) fs. ... .ftruncate(file.path, ...) fs. ... .ftruncateSync(file.path, ...) fs. ... .futimes(file.path, ...) fs. ... .futimesSync(file.path, ...) fs. ... .lchmod(file.path, ...) fs. ... .lchmodSync(file.path, ...) fs. ... .lchown(file.path, ...) fs. ... .lchownSync(file.path, ...) fs. ... .link(file.path, ...) fs. ... .link($SMTH, file.path, ...) fs. ... .linkSync(file.path, ...) fs. ... .linkSync($SMTH, file.path, ...) fs. ... .lstat(file.path, ...) fs. ... .lstatSync(file.path, ...) fs. ... .lutimes(file.path, ...) fs. ... .lutimesSync(file.path, ...) fs. ... .mkdir(file.path, ...) fs. ... .mkdirSync(file.path, ...) fs. ... .mkdtemp(file.path, ...) fs. ... .mkdtempSync(file.path, ...) fs. ... .open(file.path, ...) fs. ... .openSync(file.path, ...) fs. ... .opendir(file.path, ...) fs. ... .opendirSync(file.path, ...) fs. ... .read(file.path, ...) fs. ... .read(file.path, ...) fs. ... .readFile(file.path, ...) fs. ... .readFileSync(file.path, ...) fs. ... .readSync(file.path, ...) fs. ... .readSync(file.path, ...) fs. ... .readdir(file.path, ...) fs. ... .readdirSync(file.path, ...) fs. ... .readlink(file.path, ...) fs. ... .readlinkSync(file.path, ...) fs. ... .readv(file.path, ...) fs. ... .readvSync(file.path, ...) fs. ... .realpath(file.path, ...) fs. ... .realpath.native(file.path, ...) fs. ... .realpathSync.native(file.path, ...) fs. ... .realpathync(file.path, ...) fs. ... .rename(file.path, ...) fs. ... .rename($SMTH, file.path, ...) fs. ... .renameSync(file.path, ...) fs. ... .renameSync($SMTH, file.path, ...) fs. ... .rm(file.path, ...) fs. ... .rmSync(file.path, ...) fs. ... .rmdir(file.path, ...) fs. ... .rmdirSync(file.path, ...) fs. ... .stat(file.path, ...) fs. ... .statSync(file.path, ...) fs. ... .symlink(file.path, ...) fs. ... .symlink($SMTH, file.path, ...) fs. ... .symlinkSync(file.path, ...) fs. ... .symlinkSync($SMTH, file.path, ...) fs. ... .truncate(file.path, ...) fs. ... .truncateSync(file.path, ...) fs. ... .unlink(file.path, ...) fs. ... .unlinkSync(file.path, ...) fs. ... .unwatchFile(file.path, ...) fs. ... .utimes(file.path, ...) fs. ... .utimesSync(file.path, ...) fs. ... .watch(file.path, ...) fs. ... .watchFile(file.path, ...) fs. ... .write(file.path, ...) fs. ... .writeFile(file.path, ...) fs. ... .writeFileSync(file.path, ...) fs. ... .writeSync(file.path, ...) fs. ... .writev(file.path, ...) fs. ... .writevSync(file.path, ...) file.path $METHOD("...", ...) access(file.path,...) accessSync(file.path, ...) appendFile(file.path,...) appendFileSync(file.path, ...) chmod(file.path,...) chmodSync(file.path, ...) chown(file.path,...) chownSync(file.path, ...) close(file.path,...) closeSync(file.path, ...) copyFile(file.path,...) copyFile($SMTH, file.path,...) copyFileSync(file.path, ...) copyFileSync($SMTH, file.path, ...) cp(file.path, ...) cp($SMTH, file.path, ...) cpSync(file.path, ...) cpSync($SMTH, file.path, ...) createReadStream(file.path,...) createWriteStream(file.path,...) exists(file.path, ...) existsSync(file.path, ...) fchmod(file.path, ...) fchmodSync(file.path, ...) fchown(file.path, ...) fchownSync(file.path, ...) fdatasync(file.path, ...) fdatasyncSync(file.path, ...) fstat(file.path, ...) fstatSync(file.path, ...) fsync(file.path, ...) fsyncSync(file.path, ...) ftruncate(file.path, ...) ftruncateSync(file.path, ...) futimes(file.path, ...) futimesSync(file.path, ...) lchmod(file.path, ...) lchmodSync(file.path, ...) lchown(file.path, ...) lchownSync(file.path, ...) link(file.path, ...) link($SMTH, file.path, ...) linkSync(file.path, ...) linkSync($SMTH, file.path, ...) lstat(file.path, ...) lstatSync(file.path, ...) lutimes(file.path, ...) lutimesSync(file.path, ...) mkdir(file.path, ...) mkdirSync(file.path, ...) mkdtemp(file.path, ...) mkdtempSync(file.path, ...) open(file.path, ...) openSync(file.path, ...) opendir(file.path, ...) opendirSync(file.path, ...) read(file.path, ...) read(file.path, ...) readFile(file.path, ...) readFileSync(file.path, ...) readSync(file.path, ...) readSync(file.path, ...) readdir(file.path, ...) readdirSync(file.path, ...) readlink(file.path, ...) readlinkSync(file.path, ...) readv(file.path, ...) readvSync(file.path, ...) realpath(file.path, ...) realpath.native(file.path, ...) realpathSync.native(file.path, ...) realpathync(file.path, ...) rename(file.path, ...) rename($SMTH, file.path, ...) renameSync(file.path, ...) renameSync($SMTH, file.path, ...) rm(file.path, ...) rmSync(file.path, ...) rmdir(file.path, ...) rmdirSync(file.path, ...) stat(file.path, ...) statSync(file.path, ...) symlink(file.path, ...) symlink($SMTH, file.path, ...) symlinkSync(file.path, ...) symlinkSync($SMTH, file.path, ...) truncate(file.path, ...) truncateSync(file.path, ...) unlink(file.path, ...) unlinkSync(file.path, ...) unwatchFile(file.path, ...) utimes(file.path, ...) utimesSync(file.path, ...) watch(file.path, ...) watchFile(file.path, ...) write(file.path, ...) writeFile(file.path, ...) writeFileSync(file.path, ...) writeSync(file.path, ...) writev(file.path, ...) writevSync(file.path, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/controllers/projects.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 8d8d488c53e2378c0c0129711518aade3ad895ff741d1118723632e7ea83e43c3d7121a6ce8aa426415b5cd5d71d5724bffce7a88732b355660e427da33072d4_0
2025-05-15 22:28:48,612 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} file.path fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(file.path,...) fs. ... .accessSync(file.path, ...) fs. ... .appendFile(file.path,...) fs. ... .appendFileSync(file.path, ...) fs. ... .chmod(file.path,...) fs. ... .chmodSync(file.path, ...) fs. ... .chown(file.path,...) fs. ... .chownSync(file.path, ...) fs. ... .close(file.path,...) fs. ... .closeSync(file.path, ...) fs. ... .copyFile(file.path,...) fs. ... .copyFile($SMTH, file.path,...) fs. ... .copyFileSync(file.path, ...) fs. ... .copyFileSync($SMTH, file.path, ...) fs. ... .cp(file.path, ...) fs. ... .cp($SMTH, file.path, ...) fs. ... .cpSync(file.path, ...) fs. ... .cpSync($SMTH, file.path, ...) fs. ... .createReadStream(file.path,...) fs. ... .createWriteStream(file.path,...) fs. ... .exists(file.path, ...) fs. ... .existsSync(file.path, ...) fs. ... .fchmod(file.path, ...) fs. ... .fchmodSync(file.path, ...) fs. ... .fchown(file.path, ...) fs. ... .fchownSync(file.path, ...) fs. ... .fdatasync(file.path, ...) fs. ... .fdatasyncSync(file.path, ...) fs. ... .fstat(file.path, ...) fs. ... .fstatSync(file.path, ...) fs. ... .fsync(file.path, ...) fs. ... .fsyncSync(file.path, ...) fs. ... .ftruncate(file.path, ...) fs. ... .ftruncateSync(file.path, ...) fs. ... .futimes(file.path, ...) fs. ... .futimesSync(file.path, ...) fs. ... .lchmod(file.path, ...) fs. ... .lchmodSync(file.path, ...) fs. ... .lchown(file.path, ...) fs. ... .lchownSync(file.path, ...) fs. ... .link(file.path, ...) fs. ... .link($SMTH, file.path, ...) fs. ... .linkSync(file.path, ...) fs. ... .linkSync($SMTH, file.path, ...) fs. ... .lstat(file.path, ...) fs. ... .lstatSync(file.path, ...) fs. ... .lutimes(file.path, ...) fs. ... .lutimesSync(file.path, ...) fs. ... .mkdir(file.path, ...) fs. ... .mkdirSync(file.path, ...) fs. ... .mkdtemp(file.path, ...) fs. ... .mkdtempSync(file.path, ...) fs. ... .open(file.path, ...) fs. ... .openSync(file.path, ...) fs. ... .opendir(file.path, ...) fs. ... .opendirSync(file.path, ...) fs. ... .read(file.path, ...) fs. ... .read(file.path, ...) fs. ... .readFile(file.path, ...) fs. ... .readFileSync(file.path, ...) fs. ... .readSync(file.path, ...) fs. ... .readSync(file.path, ...) fs. ... .readdir(file.path, ...) fs. ... .readdirSync(file.path, ...) fs. ... .readlink(file.path, ...) fs. ... .readlinkSync(file.path, ...) fs. ... .readv(file.path, ...) fs. ... .readvSync(file.path, ...) fs. ... .realpath(file.path, ...) fs. ... .realpath.native(file.path, ...) fs. ... .realpathSync.native(file.path, ...) fs. ... .realpathync(file.path, ...) fs. ... .rename(file.path, ...) fs. ... .rename($SMTH, file.path, ...) fs. ... .renameSync(file.path, ...) fs. ... .renameSync($SMTH, file.path, ...) fs. ... .rm(file.path, ...) fs. ... .rmSync(file.path, ...) fs. ... .rmdir(file.path, ...) fs. ... .rmdirSync(file.path, ...) fs. ... .stat(file.path, ...) fs. ... .statSync(file.path, ...) fs. ... .symlink(file.path, ...) fs. ... .symlink($SMTH, file.path, ...) fs. ... .symlinkSync(file.path, ...) fs. ... .symlinkSync($SMTH, file.path, ...) fs. ... .truncate(file.path, ...) fs. ... .truncateSync(file.path, ...) fs. ... .unlink(file.path, ...) fs. ... .unlinkSync(file.path, ...) fs. ... .unwatchFile(file.path, ...) fs. ... .utimes(file.path, ...) fs. ... .utimesSync(file.path, ...) fs. ... .watch(file.path, ...) fs. ... .watchFile(file.path, ...) fs. ... .write(file.path, ...) fs. ... .writeFile(file.path, ...) fs. ... .writeFileSync(file.path, ...) fs. ... .writeSync(file.path, ...) fs. ... .writev(file.path, ...) fs. ... .writevSync(file.path, ...) file.path $METHOD("...", ...) access(file.path,...) accessSync(file.path, ...) appendFile(file.path,...) appendFileSync(file.path, ...) chmod(file.path,...) chmodSync(file.path, ...) chown(file.path,...) chownSync(file.path, ...) close(file.path,...) closeSync(file.path, ...) copyFile(file.path,...) copyFile($SMTH, file.path,...) copyFileSync(file.path, ...) copyFileSync($SMTH, file.path, ...) cp(file.path, ...) cp($SMTH, file.path, ...) cpSync(file.path, ...) cpSync($SMTH, file.path, ...) createReadStream(file.path,...) createWriteStream(file.path,...) exists(file.path, ...) existsSync(file.path, ...) fchmod(file.path, ...) fchmodSync(file.path, ...) fchown(file.path, ...) fchownSync(file.path, ...) fdatasync(file.path, ...) fdatasyncSync(file.path, ...) fstat(file.path, ...) fstatSync(file.path, ...) fsync(file.path, ...) fsyncSync(file.path, ...) ftruncate(file.path, ...) ftruncateSync(file.path, ...) futimes(file.path, ...) futimesSync(file.path, ...) lchmod(file.path, ...) lchmodSync(file.path, ...) lchown(file.path, ...) lchownSync(file.path, ...) link(file.path, ...) link($SMTH, file.path, ...) linkSync(file.path, ...) linkSync($SMTH, file.path, ...) lstat(file.path, ...) lstatSync(file.path, ...) lutimes(file.path, ...) lutimesSync(file.path, ...) mkdir(file.path, ...) mkdirSync(file.path, ...) mkdtemp(file.path, ...) mkdtempSync(file.path, ...) open(file.path, ...) openSync(file.path, ...) opendir(file.path, ...) opendirSync(file.path, ...) read(file.path, ...) read(file.path, ...) readFile(file.path, ...) readFileSync(file.path, ...) readSync(file.path, ...) readSync(file.path, ...) readdir(file.path, ...) readdirSync(file.path, ...) readlink(file.path, ...) readlinkSync(file.path, ...) readv(file.path, ...) readvSync(file.path, ...) realpath(file.path, ...) realpath.native(file.path, ...) realpathSync.native(file.path, ...) realpathync(file.path, ...) rename(file.path, ...) rename($SMTH, file.path, ...) renameSync(file.path, ...) renameSync($SMTH, file.path, ...) rm(file.path, ...) rmSync(file.path, ...) rmdir(file.path, ...) rmdirSync(file.path, ...) stat(file.path, ...) statSync(file.path, ...) symlink(file.path, ...) symlink($SMTH, file.path, ...) symlinkSync(file.path, ...) symlinkSync($SMTH, file.path, ...) truncate(file.path, ...) truncateSync(file.path, ...) unlink(file.path, ...) unlinkSync(file.path, ...) unwatchFile(file.path, ...) utimes(file.path, ...) utimesSync(file.path, ...) watch(file.path, ...) watchFile(file.path, ...) write(file.path, ...) writeFile(file.path, ...) writeFileSync(file.path, ...) writeSync(file.path, ...) writev(file.path, ...) writevSync(file.path, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/controllers/projects.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 8d8d488c53e2378c0c0129711518aade3ad895ff741d1118723632e7ea83e43c3d7121a6ce8aa426415b5cd5d71d5724bffce7a88732b355660e427da33072d4_0
2025-05-15 22:28:48,613 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/controllers/projects.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 76901ab152499c57f61da36736213eccd261e73c3e394232a58d7de630179dbd83d8b5c0c7e5bc14395e8b2def49f69f761c175c1cb44f893d4bd6f406a996e6_0
2025-05-15 22:28:48,614 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} file.path fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(file.path,...) fs. ... .accessSync(file.path, ...) fs. ... .appendFile(file.path,...) fs. ... .appendFileSync(file.path, ...) fs. ... .chmod(file.path,...) fs. ... .chmodSync(file.path, ...) fs. ... .chown(file.path,...) fs. ... .chownSync(file.path, ...) fs. ... .close(file.path,...) fs. ... .closeSync(file.path, ...) fs. ... .copyFile(file.path,...) fs. ... .copyFile($SMTH, file.path,...) fs. ... .copyFileSync(file.path, ...) fs. ... .copyFileSync($SMTH, file.path, ...) fs. ... .cp(file.path, ...) fs. ... .cp($SMTH, file.path, ...) fs. ... .cpSync(file.path, ...) fs. ... .cpSync($SMTH, file.path, ...) fs. ... .createReadStream(file.path,...) fs. ... .createWriteStream(file.path,...) fs. ... .exists(file.path, ...) fs. ... .existsSync(file.path, ...) fs. ... .fchmod(file.path, ...) fs. ... .fchmodSync(file.path, ...) fs. ... .fchown(file.path, ...) fs. ... .fchownSync(file.path, ...) fs. ... .fdatasync(file.path, ...) fs. ... .fdatasyncSync(file.path, ...) fs. ... .fstat(file.path, ...) fs. ... .fstatSync(file.path, ...) fs. ... .fsync(file.path, ...) fs. ... .fsyncSync(file.path, ...) fs. ... .ftruncate(file.path, ...) fs. ... .ftruncateSync(file.path, ...) fs. ... .futimes(file.path, ...) fs. ... .futimesSync(file.path, ...) fs. ... .lchmod(file.path, ...) fs. ... .lchmodSync(file.path, ...) fs. ... .lchown(file.path, ...) fs. ... .lchownSync(file.path, ...) fs. ... .link(file.path, ...) fs. ... .link($SMTH, file.path, ...) fs. ... .linkSync(file.path, ...) fs. ... .linkSync($SMTH, file.path, ...) fs. ... .lstat(file.path, ...) fs. ... .lstatSync(file.path, ...) fs. ... .lutimes(file.path, ...) fs. ... .lutimesSync(file.path, ...) fs. ... .mkdir(file.path, ...) fs. ... .mkdirSync(file.path, ...) fs. ... .mkdtemp(file.path, ...) fs. ... .mkdtempSync(file.path, ...) fs. ... .open(file.path, ...) fs. ... .openSync(file.path, ...) fs. ... .opendir(file.path, ...) fs. ... .opendirSync(file.path, ...) fs. ... .read(file.path, ...) fs. ... .read(file.path, ...) fs. ... .readFile(file.path, ...) fs. ... .readFileSync(file.path, ...) fs. ... .readSync(file.path, ...) fs. ... .readSync(file.path, ...) fs. ... .readdir(file.path, ...) fs. ... .readdirSync(file.path, ...) fs. ... .readlink(file.path, ...) fs. ... .readlinkSync(file.path, ...) fs. ... .readv(file.path, ...) fs. ... .readvSync(file.path, ...) fs. ... .realpath(file.path, ...) fs. ... .realpath.native(file.path, ...) fs. ... .realpathSync.native(file.path, ...) fs. ... .realpathync(file.path, ...) fs. ... .rename(file.path, ...) fs. ... .rename($SMTH, file.path, ...) fs. ... .renameSync(file.path, ...) fs. ... .renameSync($SMTH, file.path, ...) fs. ... .rm(file.path, ...) fs. ... .rmSync(file.path, ...) fs. ... .rmdir(file.path, ...) fs. ... .rmdirSync(file.path, ...) fs. ... .stat(file.path, ...) fs. ... .statSync(file.path, ...) fs. ... .symlink(file.path, ...) fs. ... .symlink($SMTH, file.path, ...) fs. ... .symlinkSync(file.path, ...) fs. ... .symlinkSync($SMTH, file.path, ...) fs. ... .truncate(file.path, ...) fs. ... .truncateSync(file.path, ...) fs. ... .unlink(file.path, ...) fs. ... .unlinkSync(file.path, ...) fs. ... .unwatchFile(file.path, ...) fs. ... .utimes(file.path, ...) fs. ... .utimesSync(file.path, ...) fs. ... .watch(file.path, ...) fs. ... .watchFile(file.path, ...) fs. ... .write(file.path, ...) fs. ... .writeFile(file.path, ...) fs. ... .writeFileSync(file.path, ...) fs. ... .writeSync(file.path, ...) fs. ... .writev(file.path, ...) fs. ... .writevSync(file.path, ...) file.path $METHOD("...", ...) access(file.path,...) accessSync(file.path, ...) appendFile(file.path,...) appendFileSync(file.path, ...) chmod(file.path,...) chmodSync(file.path, ...) chown(file.path,...) chownSync(file.path, ...) close(file.path,...) closeSync(file.path, ...) copyFile(file.path,...) copyFile($SMTH, file.path,...) copyFileSync(file.path, ...) copyFileSync($SMTH, file.path, ...) cp(file.path, ...) cp($SMTH, file.path, ...) cpSync(file.path, ...) cpSync($SMTH, file.path, ...) createReadStream(file.path,...) createWriteStream(file.path,...) exists(file.path, ...) existsSync(file.path, ...) fchmod(file.path, ...) fchmodSync(file.path, ...) fchown(file.path, ...) fchownSync(file.path, ...) fdatasync(file.path, ...) fdatasyncSync(file.path, ...) fstat(file.path, ...) fstatSync(file.path, ...) fsync(file.path, ...) fsyncSync(file.path, ...) ftruncate(file.path, ...) ftruncateSync(file.path, ...) futimes(file.path, ...) futimesSync(file.path, ...) lchmod(file.path, ...) lchmodSync(file.path, ...) lchown(file.path, ...) lchownSync(file.path, ...) link(file.path, ...) link($SMTH, file.path, ...) linkSync(file.path, ...) linkSync($SMTH, file.path, ...) lstat(file.path, ...) lstatSync(file.path, ...) lutimes(file.path, ...) lutimesSync(file.path, ...) mkdir(file.path, ...) mkdirSync(file.path, ...) mkdtemp(file.path, ...) mkdtempSync(file.path, ...) open(file.path, ...) openSync(file.path, ...) opendir(file.path, ...) opendirSync(file.path, ...) read(file.path, ...) read(file.path, ...) readFile(file.path, ...) readFileSync(file.path, ...) readSync(file.path, ...) readSync(file.path, ...) readdir(file.path, ...) readdirSync(file.path, ...) readlink(file.path, ...) readlinkSync(file.path, ...) readv(file.path, ...) readvSync(file.path, ...) realpath(file.path, ...) realpath.native(file.path, ...) realpathSync.native(file.path, ...) realpathync(file.path, ...) rename(file.path, ...) rename($SMTH, file.path, ...) renameSync(file.path, ...) renameSync($SMTH, file.path, ...) rm(file.path, ...) rmSync(file.path, ...) rmdir(file.path, ...) rmdirSync(file.path, ...) stat(file.path, ...) statSync(file.path, ...) symlink(file.path, ...) symlink($SMTH, file.path, ...) symlinkSync(file.path, ...) symlinkSync($SMTH, file.path, ...) truncate(file.path, ...) truncateSync(file.path, ...) unlink(file.path, ...) unlinkSync(file.path, ...) unwatchFile(file.path, ...) utimes(file.path, ...) utimesSync(file.path, ...) watch(file.path, ...) watchFile(file.path, ...) write(file.path, ...) writeFile(file.path, ...) writeFileSync(file.path, ...) writeSync(file.path, ...) writev(file.path, ...) writevSync(file.path, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/controllers/projects.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 8d8d488c53e2378c0c0129711518aade3ad895ff741d1118723632e7ea83e43c3d7121a6ce8aa426415b5cd5d71d5724bffce7a88732b355660e427da33072d4_0
2025-05-15 22:28:48,614 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} file.path fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(file.path,...) fs. ... .accessSync(file.path, ...) fs. ... .appendFile(file.path,...) fs. ... .appendFileSync(file.path, ...) fs. ... .chmod(file.path,...) fs. ... .chmodSync(file.path, ...) fs. ... .chown(file.path,...) fs. ... .chownSync(file.path, ...) fs. ... .close(file.path,...) fs. ... .closeSync(file.path, ...) fs. ... .copyFile(file.path,...) fs. ... .copyFile($SMTH, file.path,...) fs. ... .copyFileSync(file.path, ...) fs. ... .copyFileSync($SMTH, file.path, ...) fs. ... .cp(file.path, ...) fs. ... .cp($SMTH, file.path, ...) fs. ... .cpSync(file.path, ...) fs. ... .cpSync($SMTH, file.path, ...) fs. ... .createReadStream(file.path,...) fs. ... .createWriteStream(file.path,...) fs. ... .exists(file.path, ...) fs. ... .existsSync(file.path, ...) fs. ... .fchmod(file.path, ...) fs. ... .fchmodSync(file.path, ...) fs. ... .fchown(file.path, ...) fs. ... .fchownSync(file.path, ...) fs. ... .fdatasync(file.path, ...) fs. ... .fdatasyncSync(file.path, ...) fs. ... .fstat(file.path, ...) fs. ... .fstatSync(file.path, ...) fs. ... .fsync(file.path, ...) fs. ... .fsyncSync(file.path, ...) fs. ... .ftruncate(file.path, ...) fs. ... .ftruncateSync(file.path, ...) fs. ... .futimes(file.path, ...) fs. ... .futimesSync(file.path, ...) fs. ... .lchmod(file.path, ...) fs. ... .lchmodSync(file.path, ...) fs. ... .lchown(file.path, ...) fs. ... .lchownSync(file.path, ...) fs. ... .link(file.path, ...) fs. ... .link($SMTH, file.path, ...) fs. ... .linkSync(file.path, ...) fs. ... .linkSync($SMTH, file.path, ...) fs. ... .lstat(file.path, ...) fs. ... .lstatSync(file.path, ...) fs. ... .lutimes(file.path, ...) fs. ... .lutimesSync(file.path, ...) fs. ... .mkdir(file.path, ...) fs. ... .mkdirSync(file.path, ...) fs. ... .mkdtemp(file.path, ...) fs. ... .mkdtempSync(file.path, ...) fs. ... .open(file.path, ...) fs. ... .openSync(file.path, ...) fs. ... .opendir(file.path, ...) fs. ... .opendirSync(file.path, ...) fs. ... .read(file.path, ...) fs. ... .read(file.path, ...) fs. ... .readFile(file.path, ...) fs. ... .readFileSync(file.path, ...) fs. ... .readSync(file.path, ...) fs. ... .readSync(file.path, ...) fs. ... .readdir(file.path, ...) fs. ... .readdirSync(file.path, ...) fs. ... .readlink(file.path, ...) fs. ... .readlinkSync(file.path, ...) fs. ... .readv(file.path, ...) fs. ... .readvSync(file.path, ...) fs. ... .realpath(file.path, ...) fs. ... .realpath.native(file.path, ...) fs. ... .realpathSync.native(file.path, ...) fs. ... .realpathync(file.path, ...) fs. ... .rename(file.path, ...) fs. ... .rename($SMTH, file.path, ...) fs. ... .renameSync(file.path, ...) fs. ... .renameSync($SMTH, file.path, ...) fs. ... .rm(file.path, ...) fs. ... .rmSync(file.path, ...) fs. ... .rmdir(file.path, ...) fs. ... .rmdirSync(file.path, ...) fs. ... .stat(file.path, ...) fs. ... .statSync(file.path, ...) fs. ... .symlink(file.path, ...) fs. ... .symlink($SMTH, file.path, ...) fs. ... .symlinkSync(file.path, ...) fs. ... .symlinkSync($SMTH, file.path, ...) fs. ... .truncate(file.path, ...) fs. ... .truncateSync(file.path, ...) fs. ... .unlink(file.path, ...) fs. ... .unlinkSync(file.path, ...) fs. ... .unwatchFile(file.path, ...) fs. ... .utimes(file.path, ...) fs. ... .utimesSync(file.path, ...) fs. ... .watch(file.path, ...) fs. ... .watchFile(file.path, ...) fs. ... .write(file.path, ...) fs. ... .writeFile(file.path, ...) fs. ... .writeFileSync(file.path, ...) fs. ... .writeSync(file.path, ...) fs. ... .writev(file.path, ...) fs. ... .writevSync(file.path, ...) file.path $METHOD("...", ...) access(file.path,...) accessSync(file.path, ...) appendFile(file.path,...) appendFileSync(file.path, ...) chmod(file.path,...) chmodSync(file.path, ...) chown(file.path,...) chownSync(file.path, ...) close(file.path,...) closeSync(file.path, ...) copyFile(file.path,...) copyFile($SMTH, file.path,...) copyFileSync(file.path, ...) copyFileSync($SMTH, file.path, ...) cp(file.path, ...) cp($SMTH, file.path, ...) cpSync(file.path, ...) cpSync($SMTH, file.path, ...) createReadStream(file.path,...) createWriteStream(file.path,...) exists(file.path, ...) existsSync(file.path, ...) fchmod(file.path, ...) fchmodSync(file.path, ...) fchown(file.path, ...) fchownSync(file.path, ...) fdatasync(file.path, ...) fdatasyncSync(file.path, ...) fstat(file.path, ...) fstatSync(file.path, ...) fsync(file.path, ...) fsyncSync(file.path, ...) ftruncate(file.path, ...) ftruncateSync(file.path, ...) futimes(file.path, ...) futimesSync(file.path, ...) lchmod(file.path, ...) lchmodSync(file.path, ...) lchown(file.path, ...) lchownSync(file.path, ...) link(file.path, ...) link($SMTH, file.path, ...) linkSync(file.path, ...) linkSync($SMTH, file.path, ...) lstat(file.path, ...) lstatSync(file.path, ...) lutimes(file.path, ...) lutimesSync(file.path, ...) mkdir(file.path, ...) mkdirSync(file.path, ...) mkdtemp(file.path, ...) mkdtempSync(file.path, ...) open(file.path, ...) openSync(file.path, ...) opendir(file.path, ...) opendirSync(file.path, ...) read(file.path, ...) read(file.path, ...) readFile(file.path, ...) readFileSync(file.path, ...) readSync(file.path, ...) readSync(file.path, ...) readdir(file.path, ...) readdirSync(file.path, ...) readlink(file.path, ...) readlinkSync(file.path, ...) readv(file.path, ...) readvSync(file.path, ...) realpath(file.path, ...) realpath.native(file.path, ...) realpathSync.native(file.path, ...) realpathync(file.path, ...) rename(file.path, ...) rename($SMTH, file.path, ...) renameSync(file.path, ...) renameSync($SMTH, file.path, ...) rm(file.path, ...) rmSync(file.path, ...) rmdir(file.path, ...) rmdirSync(file.path, ...) stat(file.path, ...) statSync(file.path, ...) symlink(file.path, ...) symlink($SMTH, file.path, ...) symlinkSync(file.path, ...) symlinkSync($SMTH, file.path, ...) truncate(file.path, ...) truncateSync(file.path, ...) unlink(file.path, ...) unlinkSync(file.path, ...) unwatchFile(file.path, ...) utimes(file.path, ...) utimesSync(file.path, ...) watch(file.path, ...) watchFile(file.path, ...) write(file.path, ...) writeFile(file.path, ...) writeFileSync(file.path, ...) writeSync(file.path, ...) writev(file.path, ...) writevSync(file.path, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/controllers/projects.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 8d8d488c53e2378c0c0129711518aade3ad895ff741d1118723632e7ea83e43c3d7121a6ce8aa426415b5cd5d71d5724bffce7a88732b355660e427da33072d4_0
2025-05-15 22:28:48,615 - semgrep.rule_match - DEBUG - match_key = ('req function ... (..., req,...) {...} file.path fs = require(\'fs\')\n...\n fs = require(\'fs/promises\')\n...\n import fs from \'fs\'\n...\n import fs from \'fs/promises\'\n...\n import * as fs from \'fs\'\n...\n import * as fs from \'fs/promises\'\n...\n fs. ... .$METHOD("...", ...) fs. ... .access(file.path,...) fs. ... .accessSync(file.path, ...) fs. ... .appendFile(file.path,...) fs. ... .appendFileSync(file.path, ...) fs. ... .chmod(file.path,...) fs. ... .chmodSync(file.path, ...) fs. ... .chown(file.path,...) fs. ... .chownSync(file.path, ...) fs. ... .close(file.path,...) fs. ... .closeSync(file.path, ...) fs. ... .copyFile(file.path,...) fs. ... .copyFile($SMTH, file.path,...) fs. ... .copyFileSync(file.path, ...) fs. ... .copyFileSync($SMTH, file.path, ...) fs. ... .cp(file.path, ...) fs. ... .cp($SMTH, file.path, ...) fs. ... .cpSync(file.path, ...) fs. ... .cpSync($SMTH, file.path, ...) fs. ... .createReadStream(file.path,...) fs. ... .createWriteStream(file.path,...) fs. ... .exists(file.path, ...) fs. ... .existsSync(file.path, ...) fs. ... .fchmod(file.path, ...) fs. ... .fchmodSync(file.path, ...) fs. ... .fchown(file.path, ...) fs. ... .fchownSync(file.path, ...) fs. ... .fdatasync(file.path, ...) fs. ... .fdatasyncSync(file.path, ...) fs. ... .fstat(file.path, ...) fs. ... .fstatSync(file.path, ...) fs. ... .fsync(file.path, ...) fs. ... .fsyncSync(file.path, ...) fs. ... .ftruncate(file.path, ...) fs. ... .ftruncateSync(file.path, ...) fs. ... .futimes(file.path, ...) fs. ... .futimesSync(file.path, ...) fs. ... .lchmod(file.path, ...) fs. ... .lchmodSync(file.path, ...) fs. ... .lchown(file.path, ...) fs. ... .lchownSync(file.path, ...) fs. ... .link(file.path, ...) fs. ... .link($SMTH, file.path, ...) fs. ... .linkSync(file.path, ...) fs. ... .linkSync($SMTH, file.path, ...) fs. ... .lstat(file.path, ...) fs. ... .lstatSync(file.path, ...) fs. ... .lutimes(file.path, ...) fs. ... .lutimesSync(file.path, ...) fs. ... .mkdir(file.path, ...) fs. ... .mkdirSync(file.path, ...) fs. ... .mkdtemp(file.path, ...) fs. ... .mkdtempSync(file.path, ...) fs. ... .open(file.path, ...) fs. ... .openSync(file.path, ...) fs. ... .opendir(file.path, ...) fs. ... .opendirSync(file.path, ...) fs. ... .read(file.path, ...) fs. ... .read(file.path, ...) fs. ... .readFile(file.path, ...) fs. ... .readFileSync(file.path, ...) fs. ... .readSync(file.path, ...) fs. ... .readSync(file.path, ...) fs. ... .readdir(file.path, ...) fs. ... .readdirSync(file.path, ...) fs. ... .readlink(file.path, ...) fs. ... .readlinkSync(file.path, ...) fs. ... .readv(file.path, ...) fs. ... .readvSync(file.path, ...) fs. ... .realpath(file.path, ...) fs. ... .realpath.native(file.path, ...) fs. ... .realpathSync.native(file.path, ...) fs. ... .realpathync(file.path, ...) fs. ... .rename(file.path, ...) fs. ... .rename($SMTH, file.path, ...) fs. ... .renameSync(file.path, ...) fs. ... .renameSync($SMTH, file.path, ...) fs. ... .rm(file.path, ...) fs. ... .rmSync(file.path, ...) fs. ... .rmdir(file.path, ...) fs. ... .rmdirSync(file.path, ...) fs. ... .stat(file.path, ...) fs. ... .statSync(file.path, ...) fs. ... .symlink(file.path, ...) fs. ... .symlink($SMTH, file.path, ...) fs. ... .symlinkSync(file.path, ...) fs. ... .symlinkSync($SMTH, file.path, ...) fs. ... .truncate(file.path, ...) fs. ... .truncateSync(file.path, ...) fs. ... .unlink(file.path, ...) fs. ... .unlinkSync(file.path, ...) fs. ... .unwatchFile(file.path, ...) fs. ... .utimes(file.path, ...) fs. ... .utimesSync(file.path, ...) fs. ... .watch(file.path, ...) fs. ... .watchFile(file.path, ...) fs. ... .write(file.path, ...) fs. ... .writeFile(file.path, ...) fs. ... .writeFileSync(file.path, ...) fs. ... .writeSync(file.path, ...) fs. ... .writev(file.path, ...) fs. ... .writevSync(file.path, ...) file.path $METHOD("...", ...) access(file.path,...) accessSync(file.path, ...) appendFile(file.path,...) appendFileSync(file.path, ...) chmod(file.path,...) chmodSync(file.path, ...) chown(file.path,...) chownSync(file.path, ...) close(file.path,...) closeSync(file.path, ...) copyFile(file.path,...) copyFile($SMTH, file.path,...) copyFileSync(file.path, ...) copyFileSync($SMTH, file.path, ...) cp(file.path, ...) cp($SMTH, file.path, ...) cpSync(file.path, ...) cpSync($SMTH, file.path, ...) createReadStream(file.path,...) createWriteStream(file.path,...) exists(file.path, ...) existsSync(file.path, ...) fchmod(file.path, ...) fchmodSync(file.path, ...) fchown(file.path, ...) fchownSync(file.path, ...) fdatasync(file.path, ...) fdatasyncSync(file.path, ...) fstat(file.path, ...) fstatSync(file.path, ...) fsync(file.path, ...) fsyncSync(file.path, ...) ftruncate(file.path, ...) ftruncateSync(file.path, ...) futimes(file.path, ...) futimesSync(file.path, ...) lchmod(file.path, ...) lchmodSync(file.path, ...) lchown(file.path, ...) lchownSync(file.path, ...) link(file.path, ...) link($SMTH, file.path, ...) linkSync(file.path, ...) linkSync($SMTH, file.path, ...) lstat(file.path, ...) lstatSync(file.path, ...) lutimes(file.path, ...) lutimesSync(file.path, ...) mkdir(file.path, ...) mkdirSync(file.path, ...) mkdtemp(file.path, ...) mkdtempSync(file.path, ...) open(file.path, ...) openSync(file.path, ...) opendir(file.path, ...) opendirSync(file.path, ...) read(file.path, ...) read(file.path, ...) readFile(file.path, ...) readFileSync(file.path, ...) readSync(file.path, ...) readSync(file.path, ...) readdir(file.path, ...) readdirSync(file.path, ...) readlink(file.path, ...) readlinkSync(file.path, ...) readv(file.path, ...) readvSync(file.path, ...) realpath(file.path, ...) realpath.native(file.path, ...) realpathSync.native(file.path, ...) realpathync(file.path, ...) rename(file.path, ...) rename($SMTH, file.path, ...) renameSync(file.path, ...) renameSync($SMTH, file.path, ...) rm(file.path, ...) rmSync(file.path, ...) rmdir(file.path, ...) rmdirSync(file.path, ...) stat(file.path, ...) statSync(file.path, ...) symlink(file.path, ...) symlink($SMTH, file.path, ...) symlinkSync(file.path, ...) symlinkSync($SMTH, file.path, ...) truncate(file.path, ...) truncateSync(file.path, ...) unlink(file.path, ...) unlinkSync(file.path, ...) unwatchFile(file.path, ...) utimes(file.path, ...) utimesSync(file.path, ...) watch(file.path, ...) watchFile(file.path, ...) write(file.path, ...) writeFile(file.path, ...) writeFileSync(file.path, ...) writeSync(file.path, ...) writev(file.path, ...) writevSync(file.path, ...) import \'fs\'\n...\n import \'fs/promises\'\n...\n', PosixPath('server/controllers/projects.ts'), 'config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-fs-filename') match_id = 8d8d488c53e2378c0c0129711518aade3ad895ff741d1118723632e7ea83e43c3d7121a6ce8aa426415b5cd5d71d5724bffce7a88732b355660e427da33072d4_1
2025-05-15 22:28:48,617 - semgrep.core_runner - DEBUG - semgrep ran in 0:00:10.740813 on 107 files
2025-05-15 22:28:48,618 - semgrep.core_runner - DEBUG - findings summary: 3 warning, 6 error, 0 info
2025-05-15 22:28:48,620 - semgrep.app.auth - DEBUG - Getting API token from settings file
2025-05-15 22:28:48,621 - semgrep.app.auth - DEBUG - No API token found in settings file
2025-05-15 22:28:48,621 - semgrep.semgrep_core - DEBUG - Failed to open resource semgrep-core-proprietary: [Errno 2] No such file or directory: '/tmp/_MEIvwzcRi/semgrep/bin/semgrep-core-proprietary'.
2025-05-15 22:28:48,744 - semgrep.output - VERBOSE - 
========================================
Files skipped:
========================================

  Always skipped by Opengrep:

   • <none>

  Skipped by .gitignore:
  (Disable by passing --no-git-ignore)

   • <all files not listed by `git ls-files` were skipped>

  Skipped by .semgrepignore:
  - https://semgrep.dev/docs/ignoring-files-folders-code/#understand-semgrep-defaults

   • <none>

  Skipped by --include patterns:

   • <none>

  Skipped by --exclude patterns:

   • <none>

  Files skipped due to insufficient read permissions:

   • <none>

  Skipped by limiting to files smaller than 1000000 bytes:
  (Adjust with the --max-target-bytes flag)

   • <none>

  Partially analyzed due to parsing or internal Opengrep errors

   • tailwind.config.ts (1 lines skipped)

2025-05-15 22:28:48,746 - semgrep.output - INFO - Some files were skipped or only partially analyzed.
  Scan was limited to files tracked by git.
  Partially scanned: 1 files only partially analyzed due to parsing or internal Opengrep errors

Ran 435 rules on 107 files: 9 findings.
2025-05-15 22:28:48,746 - semgrep.app.version - DEBUG - Version cache does not exist
2025-05-15 22:28:48,766 - semgrep.metrics - VERBOSE - Not sending pseudonymous metrics since metrics are configured to OFF and registry usage is False
